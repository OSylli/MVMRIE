// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// make_initial2
List make_initial2(arma::vec Y, arma::vec S1, arma::vec S2, arma::mat Z, arma::mat X);
RcppExport SEXP _MVMRIE_make_initial2(SEXP YSEXP, SEXP S1SEXP, SEXP S2SEXP, SEXP ZSEXP, SEXP XSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type S1(S1SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type S2(S2SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Z(ZSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    rcpp_result_gen = Rcpp::wrap(make_initial2(Y, S1, S2, Z, X));
    return rcpp_result_gen;
END_RCPP
}
// MVMR_estimation_EM
List MVMR_estimation_EM(arma::vec Y, arma::vec S1, arma::vec S2, arma::ivec R1, arma::ivec R2, arma::mat Z, arma::mat X, arma::vec alpha1_init, arma::vec alpha2_init, arma::vec beta_init, double gamma1_init, double gamma2_init, arma::mat Sigma_init, double epsilon, arma::vec QuaWeight, arma::vec QuaPoint);
RcppExport SEXP _MVMRIE_MVMR_estimation_EM(SEXP YSEXP, SEXP S1SEXP, SEXP S2SEXP, SEXP R1SEXP, SEXP R2SEXP, SEXP ZSEXP, SEXP XSEXP, SEXP alpha1_initSEXP, SEXP alpha2_initSEXP, SEXP beta_initSEXP, SEXP gamma1_initSEXP, SEXP gamma2_initSEXP, SEXP Sigma_initSEXP, SEXP epsilonSEXP, SEXP QuaWeightSEXP, SEXP QuaPointSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type S1(S1SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type S2(S2SEXP);
    Rcpp::traits::input_parameter< arma::ivec >::type R1(R1SEXP);
    Rcpp::traits::input_parameter< arma::ivec >::type R2(R2SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Z(ZSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type alpha1_init(alpha1_initSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type alpha2_init(alpha2_initSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type beta_init(beta_initSEXP);
    Rcpp::traits::input_parameter< double >::type gamma1_init(gamma1_initSEXP);
    Rcpp::traits::input_parameter< double >::type gamma2_init(gamma2_initSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Sigma_init(Sigma_initSEXP);
    Rcpp::traits::input_parameter< double >::type epsilon(epsilonSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type QuaWeight(QuaWeightSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type QuaPoint(QuaPointSEXP);
    rcpp_result_gen = Rcpp::wrap(MVMR_estimation_EM(Y, S1, S2, R1, R2, Z, X, alpha1_init, alpha2_init, beta_init, gamma1_init, gamma2_init, Sigma_init, epsilon, QuaWeight, QuaPoint));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_MVMRIE_make_initial2", (DL_FUNC) &_MVMRIE_make_initial2, 5},
    {"_MVMRIE_MVMR_estimation_EM", (DL_FUNC) &_MVMRIE_MVMR_estimation_EM, 16},
    {NULL, NULL, 0}
};

RcppExport void R_init_MVMRIE(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
